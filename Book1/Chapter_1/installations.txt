Installing Required Software in Windows
Objectives
After completing this chapter you should be able to:

Informally describe what it means to install software
Install and configure the tools mentioned in this chapter on a new Windows computer
NOTE: If you used Windows in the front-end course, you have most of this installed and configured already, but there are a few new tools to install so please carefully read through this document.

Zoom
https://zoom.us/

Slack
https://slack.com/

Web Browsers
The main browser we will use is Google Chrome
You might also like to give Mozilla Firefox a try too.
Visual Studio Code
Visual Studio Code is Microsoft's cross-platform editor that we'll be using during orientation for writing C# and building .NET applications. Make sure you add the C# extension immediately after installation completes.

NOTE: On the second window, Select Additional Tasks, you will be prompted with checkbox options. Select all options under 'Other'.

VS Code Settings
If you haven't already set up Visual Studio Code to format your code and autosave your files, now is a good time to set that up. Inside VS Code go to the settings by using the shortcut ctrl + , and using the search bar find the Format On Save setting and make sure it is checked. Next find the setting for Auto Save and make sure that it's set to either "onFocusChange" or "onWindowChange" (whatever you prefer)

Postman
Install Postman for testing APIs.
Terminal
Install Git For Windows. This comes with the git-bash bash prompt we will be using throughout the backend.
Install Windows Terminal
Configure Windows Terminal to use git-bash
Open Windows Terminal (You'll find it in the Start menu)

Select the arrow drop-down in the Windows Terminal title bar. It will be next to the + button.

Select Settings. This will open the settings.json file in Visual Studio Code

Add the following object to the profiles.list array

{
  "guid": "{00000000-0000-0000-ba54-000000000002}",
  "closeOnExit": true,
  "colorScheme": "Campbell",
  "commandline": "\"%PROGRAMFILES%\\git\\usr\\bin\\bash.exe\" -i -l",
  "cursorColor": "#FFFFFF",
  "cursorShape": "bar",
  "fontFace": "Consolas",
  "historySize": 9001,
  "icon": "ms-appx:///ProfileIcons/{0caa0dad-35be-5f56-a8ff-afceeeaa6101}.png",
  "name": "Bash",
  "padding": "10, 0, 0, 0",
  "snapOnInput": true,
  "startingDirectory": "%USERPROFILE%"
}
Find the defaultProfile key near the top of the file. Updates its value to be "{00000000-0000-0000-ba54-000000000002}"

Save the settings.json file and close Visual Studio Code.

Open your terminal and create a workspace directory mkdir ~/workspace
Creating Your SSH Key For Github
Watch a short video for creating an SSH key in the terminal so that you can work with Github.

Add SSH Key to Github Account
Now watch the video for adding your SSH key to your Github account.

Configuring Git
First we'll configure git to use main as the default branch instead of master.

git config --global init.defaultBranch main
Next, in order for Git to know who made a commit, we have to set the username and email properties in the git config.

In the terminal, paste the following and add your email:

git config --global user.email "you@example.com"
In the terminal, paste the following and add your name (this is not your Github username):

git config --global user.name "Your Name"
Finally, we will tell git which merge strategy to use when we do a git pull.

git config --global pull.rebase false
Node
Install Node for working with JavaScript tools
NOTE: You will be prompted with a checkbox in the window 'Tools for Native Modules' that asks, 'Automatically install the necessary tools. Note that this will also install Chocolatey. The script will pop-up in a new window after the installation completes'. You must leave this checkbox unchecked, which is the default setting.

After installing node, you should close and reopen your terminal window before continuing.

Install serve and json-server
npm i -g serve json-server
.NET
Install .NET from https://dotnet.microsoft.com/download
Click the Download .NET SDK x64 button under the large .NET header on the left side. This will download the .NET 5 Software Development Kit
Open a terminal and run dotnet --version. You should see a version greater than or equal to 5.0.103
Gitignore Shortcut
You'll be making a lot of new projects and we want to easily be able to create a gitignore file before pushing to Github. Run the following code from a git bash window

echo "
dnignore() {
    curl -L -s 'https://raw.githubusercontent.com/github/gitignore/master/VisualStudio.gitignore' > .gitignore
}
" >> ~/.bashrc
You now have access in your terminal to a command called dnignore which will add a gitignore file to your project.

Always Open a Terminal Window in Last Directory
If you would like your terminal window to always open in the last directory you were in, then you can run the following code in your terminal.

echo $'\n \n
# always remember last directory
cd() {
  builtin cd "$@"
  pwd > ~/.last_dir
}
if [ -f ~/.last_dir ]; then
  cd "`cat ~/.last_dir`"
fi' >> ~/.bashrc
Visual Studio IDE
Visual Studio Community Edition. This will be your main code authoring tool for the server-side course.

INFO: When installing Visual Studio, you will be presented with a variety of workloads. Select the following workloads.

ASP.NET and web development
.NET Core cross-platform development
SQL Server Express Database
SQL Server Express. This is the database tool where all your data will be stored for the server-side course. Click the Download button under the Express option. During the setup, take the basic installation option

Installation Check
Now that you have finished the installation process, please double check that you have not missed something.

Installation Check: Start Menu
Check that you have the following programs by pressing your Windows key (Windows keyboard) or Command key (Apple keyboard) to open the Start menu, and begin typing in the name of the following progams to see that they are installed:

Zoom
Slack
Postman
Google Chrome
Visual Studio
Visual Studio Code
Windows Terminal
Mozilla Firefox (if you installed it)
SQL Server 2019 Configuration Manager
Installation Check: Terminal Commands
Finally, run the following commands in Windows Terminal to check that the following are installed or set correctly. Example outputs are listed under each command:

NOTE: The version numbers you see may be higher than those listed below. It's completely fine to have a higher version of any of these tools, but if you have a lower version, please ask an instructor to take a look.

$ git --version
git version 2.28.0.windows.1
$ node -v
v12.16.3
$ serve -v
11.3.2
$ json-server -v
0.16.3
$ dotnet --version
5.0.103
$ ls -al ~/.ssh
drwxr-xr-x 1 mecar 197609    0 May 22  2020 ./  
drwxr-xr-x 1 mecar 197609    0 Feb 26 13:41 ../  
-rw-r--r-- 1 mecar 197609 3434 May 20  2020 id_rsa  
-rw-r--r-- 1 mecar 197609  751 May 20  2020 id_rsa.pub  
-rw-r--r-- 1 mecar 197609  751 May 20  2020 id_rsa.pub  
-rw-r--r-- 1 mecar 197609 2375 Jun  1  2020 known_hosts  
$ git config --list
user.email=youremail@example.com  
user.name=Your Name 
pull.rebase=false  
init.defaultbranch=main  
Note: There are many settings listed. You only need to check user.email, user.name, pull.rebase, & init.defaultBranch.

$ type dnignore
dnignore is a function  
dnignore ()  
{  
   curl -L -s "https://<span></span>raw.githu<span></span>busercontent.<span></span>com/dotnet/core/master/.gitignore" > .gitignore  
}
$ type cd
cd is a function  
cd ()  
{  
   builtin cd "$@";  
   pwd > ~/.last_dir  
}
Note: Only if you chose to run the command to always open a terminal window in the last directory.

Bookmark the Following Sites
dbdiagram.io web application for creating ERDs (Entity Relationship Diagrams).

https://docs.asp.net/en/latest/getting-started.html

https://docs.microsoft.com/en-us/dotnet/

.NET on YouTube
Main page: https://www.youtube.com/channel/UCvtT19MZW8dq5Wwfu6B0oxw
C# 101: https://www.youtube.com/watch?v=BM4CHBmAPh4&list=PLdo4fOZ0oVxKLQCHpiUWun7vlJJvUiN
.NET 101: https://www.youtube.com/watch?v=eIHKZfgddLM&list=PLdo4fOcmZ0oWoazjhXQzBKMrFuArxpW80